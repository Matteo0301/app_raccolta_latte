name: Flutter release

on:
    release:
        types: [published]
    workflow_dispatch:

jobs:
    android:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-java@v2
              with:
                distribution: 'zulu'
                java-version: '11'
            - uses: subosito/flutter-action@v1
              with:
                  flutter-version: '3.16.3'
            - shell: bash
              env:
                ENVIRONMENT: ${{ secrets.Environment }}
              run: 'echo "$ENVIRONMENT" | base64 -d > .env'
            - run: flutter pub get
            - run: flutter build apk --release
            - uses: actions/upload-artifact@v2
              with:
                  name: release-apk
                  path: build/app/outputs/apk/release/app-release.apk
    web:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-java@v1
              with:
                  java-version: 11
            - uses: subosito/flutter-action@v1
              with:
                  flutter-version: '3.16.3'
            - shell: bash
              env:
                ENVIRONMENT: ${{ secrets.Environment }}
              run: 'echo "$ENVIRONMENT" | base64 -d > .env'
            - run: flutter pub get
            - run: flutter build web --release
            - shell: bash
              run: zip -r web.zip build/web
            - uses: actions/upload-artifact@v2
              with:
                  name: release-web
                  path: web.zip
    windows:
      runs-on: windows-latest
      steps:
        - uses: actions/checkout@v3
        - uses: subosito/flutter-action@v2
          with:
            channel: 'beta'
        - shell: bash
          env:
            ENVIRONMENT: ${{ secrets.Environment }}
            MSIX_CERTIFICATE: ${{ secrets.MSIX_CERTIFICATE }}
            MSIX_PASSWORD: ${{ secrets.MSIX_PASSWORD }}
          run: 'echo "$ENVIRONMENT" | base64 -d > .env && echo "$MSIX_CERTIFICATE" | base64 -d > cert.pfx && echo "$MSIX_PASSWORD" | base64 -d >> pubspec.yaml'
        - run: flutter config --enable-windows-desktop
        - run: flutter build windows
        - run: dart run msix:create
        - uses: actions/upload-artifact@v2
          with:
            name: release-windows
            path: build/windows/x64/runner/Release/app_raccolta_latte.msix
    linux:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - uses: subosito/flutter-action@v2
          with:
            flutter-version: '3.16.3'
        - run: |
            sudo apt-get update -y
            sudo apt-get install -y ninja-build libgtk-3-dev
        - shell: bash
          env:
            ENVIRONMENT: ${{ secrets.Environment }}
          run: 'echo "$ENVIRONMENT" | base64 -d > .env'
        - run: flutter config --enable-linux-desktop
        - run: flutter build linux
        - name: Install appimage-builder
          run: |
            wget -O appimage-builder-x86_64.AppImage https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.1.0/appimage-builder-1.1.0-x86_64.AppImage
            chmod +x appimage-builder-x86_64.AppImage
            sudo mv appimage-builder-x86_64.AppImage /usr/local/bin/appimage-builder
        - name: Build AppImage
          run: |
            cp -r build/linux/x64/release/bundle $PWD/AppDir
            appimage-builder --recipe AppImageBuilder.yml
        - uses: actions/upload-artifact@v2
          with:
            name: release-windows
            path: Raccolta_Latte-latest-x86_64.AppImage
        