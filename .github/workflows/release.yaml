name: Flutter release

on:
  create:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  release:
      runs-on: ubuntu-latest
      steps:
        - id: release
          uses: actions/create-release@v1
          with:
            draft: false
            prerelease: false
            release_name: ${{ github.ref }}
            tag_name: ${{ github.ref }}
          env:
            GITHUB_TOKEN: ${{ github.token }}
      outputs:
        url: ${{ steps.release.outputs.upload_url }}
  android:
      runs-on: ubuntu-latest
      needs: release
      steps:
          - uses: actions/checkout@v3
          - uses: actions/setup-java@v2
            with:
              distribution: 'zulu'
              java-version: '11'
          - uses: subosito/flutter-action@v1
            with:
                flutter-version: '3.19.0-0.2.pre'
                channel: 'beta'
          - shell: bash
            env:
              ENVIRONMENT: ${{ secrets.Environment }}
            run: 'echo "$ENVIRONMENT" | base64 -d > lib/secrets.dart'
          - run: flutter pub get
          - run: flutter build apk --release
          - name: upload apk
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ github.token }}
            with:
              upload_url: ${{needs.release.outputs.url}}
              asset_path: build/app/outputs/apk/release/app-release.apk
              asset_name: app-release.apk
              asset_content_type: application/x-binary
  web:
      runs-on: ubuntu-latest
      needs: release
      steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v2
            with:
              distribution: 'zulu'
              java-version: '11'
          - uses: subosito/flutter-action@v1
            with:
                flutter-version: '3.19.0-0.2.pre'
                channel: 'beta'
          - shell: bash
            env:
              ENVIRONMENT: ${{ secrets.Environment }}
            run: 'echo "$ENVIRONMENT" | base64 -d > lib/secrets.dart'
          - run: flutter pub get
          - run: flutter build web --release
          - shell: bash
            run: zip -r web.zip build/web
          - name: upload zip
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ github.token }}
            with:
              upload_url: ${{needs.release.outputs.url}}
              asset_path: web.zip
              asset_name: web.zip
              asset_content_type: application/x-compressed
  windows:
      runs-on: windows-latest
      needs: release
      steps:
          - uses: actions/checkout@v3
          - uses: subosito/flutter-action@v2
            with:
              flutter-version: '3.19.0-0.2.pre'
              channel: 'beta'
          - shell: bash
            env:
              ENVIRONMENT: ${{ secrets.Environment }}
              MSIX_CERTIFICATE: ${{ secrets.MSIX_CERTIFICATE }}
              MSIX_PASSWORD: ${{ secrets.MSIX_PASSWORD }}
            run: 'echo "$ENVIRONMENT" | base64 -d > lib/secrets.dart && echo "$MSIX_CERTIFICATE" | base64 -d > cert.pfx && echo -e "\n" >> pubspec.yaml && echo "$MSIX_PASSWORD" | base64 -d >> pubspec.yaml'
          - run: flutter config --enable-windows-desktop
          - run: flutter build windows
          - shell: bash
            run: 'yes | dart run msix:create'
            continue-on-error: true
          - name: upload installer
            if: always()
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ github.token }}
            with:
              upload_url: ${{needs.release.outputs.url}}
              asset_path: build/windows/x64/runner/Release/app_raccolta_latte.msix
              asset_name: release-windows.msix
              asset_content_type: application/x-binary
  linux:
      runs-on: ubuntu-latest
      needs: release
      steps:
          - uses: actions/checkout@v3
          - uses: subosito/flutter-action@v2
            with:
              flutter-version: '3.19.0-0.2.pre'
              channel: 'beta'
          - run: |
              sudo apt-get update -y
              sudo apt-get install -y ninja-build libgtk-3-dev
          - shell: bash
            env:
              ENVIRONMENT: ${{ secrets.Environment }}
            run: 'echo "$ENVIRONMENT" | base64 -d > lib/secrets.dart'
          - run: flutter config --enable-linux-desktop
          - run: flutter build linux
          - run: 'sudo apt install -y binutils coreutils desktop-file-utils fakeroot fuse libgdk-pixbuf2.0-dev patchelf python3-pip python3-setuptools squashfs-tools strace util-linux zsync'
          - name: Install appimage-builder
            run: |
              wget -O appimage-builder-x86_64.AppImage https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.1.0/appimage-builder-1.1.0-x86_64.AppImage
              chmod +x appimage-builder-x86_64.AppImage
              sudo mv appimage-builder-x86_64.AppImage /usr/local/bin/appimage-builder
          - name: Build AppImage
            run: |
              cp -r build/linux/x64/release/bundle $PWD/AppDir
              appimage-builder --skip-tests --recipe AppImageBuilder.yml
          - name: upload app
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ github.token }}
            with:
              upload_url: ${{needs.release.outputs.url}}
              asset_path: Raccolta_latte-latest-x86_64.AppImage
              asset_name: Raccolta_latte-latest-x86_64.AppImage
              asset_content_type: application/x-binary
        
